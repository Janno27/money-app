#!/bin/bash

# S'assurer que l'on est bien √† la racine du projet
cd "$(dirname "$0")/.."

# V√©rifier que le CLI Supabase est install√©
if ! command -v supabase &> /dev/null; then
    echo "Le CLI Supabase n'est pas install√©. Veuillez l'installer : https://supabase.com/docs/guides/cli"
    exit 1
fi

# Variables
PROJECT_ID=$(grep -o 'NEXT_PUBLIC_SUPABASE_URL=.*' .env.local | sed 's/.*https:\/\/\(.*\)\.supabase\.co.*/\1/')

if [ -z "$PROJECT_ID" ]; then
    echo "Impossible de trouver l'ID du projet Supabase dans le fichier .env.local"
    echo "Veuillez entrer manuellement l'ID du projet Supabase (par exemple 'ouiwpkxvjxcfbypmurap'):"
    read PROJECT_ID
fi

# Appliquer les migrations
echo "Application des migrations Supabase..."

# V√©rifier si le projet est li√© √† Supabase
if supabase status --output=json | grep -q "\"REMOTE_PROJECT_ID\":\"$PROJECT_ID\""; then
    echo "Projet d√©j√† li√© √† Supabase."
else
    echo "Liaison du projet √† Supabase..."
    supabase link --project-ref "$PROJECT_ID"
fi

# Pousser les migrations
cd supabase
supabase db push

# V√©rifier si l'application des migrations a r√©ussi
if [ $? -eq 0 ]; then
    echo "üéâ Migrations appliqu√©es avec succ√®s!"
else
    echo "‚ùå Erreur lors de l'application des migrations."
    echo "V√©rifiez que vous √™tes connect√© au CLI Supabase (supabase login) et que le projet existe."
fi

# Retourner √† la racine du projet
cd ..

# Informations compl√©mentaires
echo ""
echo "Votre base de donn√©es a √©t√© mise √† jour."
echo "Pour revoir le sch√©ma de votre base de donn√©es, visitez :"
echo "https://supabase.com/dashboard/project/$PROJECT_ID/database/tables" 